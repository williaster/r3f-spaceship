(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[602],{9603:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return f}});var r=n(6311),a=n(7294),s=n(9008),o=n(1307),i=n(6671),l=n(6825),c=n.n(l),d=n(7318),u=n(8858),m=n(5893),h={stars:[d.default,"import React, { useMemo, useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { useControls } from 'leva';\n\nconst Stars = () => {\n  // tuning variables\n  const { starCount, starColor, starSpread } = useControls({\n    starColor: '#dec068',\n    starCount: { value: 100, min: 0, max: 1000, step: 1 },\n    starSpread: { value: 20, min: 1, max: 100, step: 1 },\n  });\n\n  const meshRef = useRef<THREE.InstancedMesh>();\n  const object3d = useMemo(() => new THREE.Object3D(), []);\n\n  // randomly place stars\n  const stars = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < starCount; i++) {\n      result.push({\n        x: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        y: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        z: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        random: THREE.MathUtils.randFloat(20, 100),\n      });\n    }\n    return result;\n  }, [starCount, starSpread]);\n\n  // update stars each frame\n  useFrame(() => {\n    stars.forEach((star, i) => {\n      const { x, y, z, random } = star;\n\n      const scale = Math.cos(random);\n\n      // Update the dummy object\n      object3d.position.set(x, y, z);\n      object3d.scale.set(scale, scale, scale);\n      object3d.updateMatrix();\n\n      // And apply the matrix to the instanced item\n      meshRef.current.setMatrixAt(i, object3d.matrix);\n    });\n    meshRef.current.instanceMatrix.needsUpdate = true;\n  });\n\n  return (\n    <instancedMesh\n      ref={meshRef}\n      args={[null, null, starCount]} // [geometry, material, count]\n    >\n      <planeGeometry\n        args={[0.25, 10]} // [width, height]\n      />\n      {/** shiny material */}\n      <meshPhongMaterial\n        color={starColor}\n        side={THREE.DoubleSide} // solid on both sides\n        depthWrite={false}\n      />\n    </instancedMesh>\n  );\n};\n\nexport default Stars;\n"],animated:[u.default,"import React, { useMemo, useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { useControls } from 'leva';\n\nconst Stars = ({ speed = 1 }) => {\n  // tuning variables\n  const { starCount, starColor, starSpread, wrapDistance } = useControls({\n    starColor: '#db2438',\n    starCount: { value: 500, min: 0, max: 1000, step: 1 },\n    starSpread: { value: 30, min: 1, max: 100, step: 1 },\n    wrapDistance: { value: 70, min: 20, max: 100, step: 1 },\n  });\n\n  const meshRef = useRef<THREE.InstancedMesh>();\n  const object3d = useMemo(() => new THREE.Object3D(), []);\n\n  // randomly place stars\n  const stars = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < starCount; i++) {\n      result.push({\n        // add speedFactor\n        speedFactor: THREE.MathUtils.randFloat(0.2, 1),\n        x: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        y: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        z: THREE.MathUtils.randFloat(-starSpread, starSpread),\n        random: THREE.MathUtils.randFloat(20, 100),\n      });\n    }\n    return result;\n  }, [starCount, starSpread]);\n\n  // update stars each frame\n  useFrame((state) => {\n    const { elapsedTime } = state.clock;\n    stars.forEach((star, i) => {\n      const { x, y, z, random, speedFactor } = star;\n\n      const nextY = y - elapsedTime * speed * speedFactor;\n      // start particle from the top once it's out of view\n      const nextYWrapped =\n        (nextY % wrapDistance) + (speed === 0 ? 0 : wrapDistance / 2);\n\n      const scale = Math.cos(random);\n\n      // Update the dummy object\n      object3d.position.set(x, nextYWrapped, z);\n      object3d.scale.set(scale, scale, scale);\n      object3d.rotation.set(0, Math.PI * elapsedTime * (random / 50), 0);\n      object3d.updateMatrix();\n\n      // And apply the matrix to the instanced item\n      meshRef.current.setMatrixAt(i, object3d.matrix);\n    });\n    meshRef.current.instanceMatrix.needsUpdate = true;\n  });\n\n  return (\n    <instancedMesh\n      ref={meshRef}\n      args={[null, null, starCount]} // [geometry, material, count]\n    >\n      <planeGeometry\n        args={[0.25, 10]} // [width, height]\n      />\n      {/** shiny material */}\n      <meshPhongMaterial\n        color={starColor}\n        side={THREE.DoubleSide} // solid on both sides\n        depthWrite={false}\n      />\n    </instancedMesh>\n  );\n};\n\nexport default Stars;\n"],full:[u.default,"import React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport { Leva, useControls } from 'leva';\nimport AnimatedStars from './03-animated-stars-only';\n\nconst Demo = () => (\n  <>\n    <Canvas>\n      <Scene />\n    </Canvas>\n    <Leva />\n  </>\n);\n\nconst Scene = () => {\n  const { background, speed } = useControls({\n    background: '#850085',\n    speed: { value: 0, min: 0, max: 200 },\n  });\n\n  return (\n    <>\n      <color attach=\"background\" args={[background]} />\n      <OrbitControls />\n      <ambientLight intensity={0.5} />\n      <Rocket />\n      <AnimatedStars speed={speed} />\n    </>\n  );\n};\n\nconst Rocket = () => (\n  <mesh>\n    <coneGeometry\n      args={[0.75, 2, 30]} // [radius, height, numSegments]\n    />\n    <meshStandardMaterial color=\"#ff8474\" />\n  </mesh>\n);\n\nexport default Demo;\n"]},f=function(){var e,t=(0,a.useState)("stars"),n=t[0],l=t[1],d=null!==(e=h[n])&&void 0!==e?e:[],u=(0,r.Z)(d,2),f=u[0],p=u[1];return(0,m.jsxs)("div",{className:c().container,children:[(0,m.jsxs)(s.default,{children:[(0,m.jsx)("title",{children:"@react-three/fiber"}),(0,m.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,m.jsxs)("main",{className:c().main,children:[(0,m.jsx)("h3",{children:"Adding stars to our scene \ud83d\udcab"}),(0,m.jsxs)("form",{onChange:function(e){return l(e.target.value)},children:[(0,m.jsxs)("label",{children:[(0,m.jsx)("input",{type:"radio",value:"stars",checked:"stars"===n})," ","Stars"]}),(0,m.jsxs)("label",{children:[(0,m.jsx)("input",{type:"radio",value:"animated",checked:"animated"===n})," ","Animated stars"]}),(0,m.jsxs)("label",{children:[(0,m.jsx)("input",{type:"radio",value:"full",checked:"full"===n}),"Stars (full source)"]})]}),f&&p&&(0,m.jsxs)("div",{className:c().demo,children:[(0,m.jsx)("div",{className:c().code,children:(0,m.jsx)(o.Z,{language:"typescript",style:i.O$,customStyle:{fontSize:"1.2em"},children:p})}),(0,m.jsx)("div",{className:c().scene,children:(0,m.jsx)(f,{})})]})]})]})}},5979:function(e,t,n){"use strict";n.r(t);var r=n(7294),a=n(9101),s=n(2212),o=n(6147),i=n(5893);t.default=function(e){var t=e.speed,n=void 0===t?1:t,l=(0,o.M4)({starColor:"#db2438",starCount:{value:500,min:0,max:1e3,step:1},starSpread:{value:30,min:1,max:100,step:1},wrapDistance:{value:70,min:20,max:100,step:1}}),c=l.starCount,d=l.starColor,u=l.starSpread,m=l.wrapDistance,h=(0,r.useRef)(),f=(0,r.useMemo)((function(){return new s.Object3D}),[]),p=(0,r.useMemo)((function(){for(var e=[],t=0;t<c;t++)e.push({speedFactor:s.MathUtils.randFloat(.2,1),x:s.MathUtils.randFloat(-u,u),y:s.MathUtils.randFloat(-u,u),z:s.MathUtils.randFloat(-u,u),random:s.MathUtils.randFloat(20,100)});return e}),[c,u]);return(0,a.xQ)((function(e){var t=e.clock.elapsedTime;p.forEach((function(e,r){var a=e.x,s=e.y,o=e.z,i=e.random,l=e.speedFactor,c=(s-t*n*l)%m+(0===n?0:m/2),d=Math.cos(i);f.position.set(a,c,o),f.scale.set(d,d,d),f.rotation.set(0,Math.PI*t*(i/50),0),f.updateMatrix(),h.current.setMatrixAt(r,f.matrix)})),h.current.instanceMatrix.needsUpdate=!0})),(0,i.jsxs)("instancedMesh",{ref:h,args:[null,null,c],children:[(0,i.jsx)("planeGeometry",{args:[.25,10]}),(0,i.jsx)("meshPhongMaterial",{color:d,side:s.DoubleSide,depthWrite:!1})]})}},8858:function(e,t,n){"use strict";n.r(t);n(7294);var r=n(9101),a=n(6037),s=n(6147),o=n(5979),i=n(5893),l=function(){var e=(0,s.M4)({background:"#850085",speed:{value:0,min:0,max:200}}),t=e.background,n=e.speed;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("color",{attach:"background",args:[t]}),(0,i.jsx)(a.z,{}),(0,i.jsx)("ambientLight",{intensity:.5}),(0,i.jsx)(c,{}),(0,i.jsx)(o.default,{speed:n})]})},c=function(){return(0,i.jsxs)("mesh",{children:[(0,i.jsx)("coneGeometry",{args:[.75,2,30]}),(0,i.jsx)("meshStandardMaterial",{color:"#ff8474"})]})};t.default=function(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.Xz,{children:(0,i.jsx)(l,{})}),(0,i.jsx)(s.Zf,{})]})}},7844:function(e,t,n){"use strict";n.r(t);var r=n(7294),a=n(9101),s=n(2212),o=n(6147),i=n(5893);t.default=function(){var e=(0,o.M4)({starColor:"#dec068",starCount:{value:100,min:0,max:1e3,step:1},starSpread:{value:20,min:1,max:100,step:1}}),t=e.starCount,n=e.starColor,l=e.starSpread,c=(0,r.useRef)(),d=(0,r.useMemo)((function(){return new s.Object3D}),[]),u=(0,r.useMemo)((function(){for(var e=[],n=0;n<t;n++)e.push({x:s.MathUtils.randFloat(-l,l),y:s.MathUtils.randFloat(-l,l),z:s.MathUtils.randFloat(-l,l),random:s.MathUtils.randFloat(20,100)});return e}),[t,l]);return(0,a.xQ)((function(){u.forEach((function(e,t){var n=e.x,r=e.y,a=e.z,s=e.random,o=Math.cos(s);d.position.set(n,r,a),d.scale.set(o,o,o),d.updateMatrix(),c.current.setMatrixAt(t,d.matrix)})),c.current.instanceMatrix.needsUpdate=!0})),(0,i.jsxs)("instancedMesh",{ref:c,args:[null,null,t],children:[(0,i.jsx)("planeGeometry",{args:[.25,10]}),(0,i.jsx)("meshPhongMaterial",{color:n,side:s.DoubleSide,depthWrite:!1})]})}},7318:function(e,t,n){"use strict";n.r(t);n(7294);var r=n(9101),a=n(6037),s=n(6147),o=n(7844),i=n(5893),l=function(){var e=(0,s.M4)({background:"#312331"}).background;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("color",{attach:"background",args:[e]}),(0,i.jsx)(a.z,{}),(0,i.jsx)("ambientLight",{intensity:.5}),(0,i.jsx)(c,{}),(0,i.jsx)(o.default,{})]})},c=function(){return(0,i.jsxs)("mesh",{children:[(0,i.jsx)("coneGeometry",{args:[.75,2,30]}),(0,i.jsx)("meshStandardMaterial",{color:"#ff8474"})]})};t.default=function(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.Xz,{children:(0,i.jsx)(l,{})}),(0,i.jsx)(s.Zf,{})]})}},3339:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/03_stars",function(){return n(9603)}])},6825:function(e){e.exports={main:"r3f_main__3hApG",demo:"r3f_demo__3X7Q1",code:"r3f_code__1BM0E",scene:"r3f_scene__3Un_L",scene__full_width:"r3f_scene__full_width__38Hpq",flex:"r3f_flex__228D6"}},6311:function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s=[],o=!0,i=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(s.push(r.value),!t||s.length!==t);o=!0);}catch(l){i=!0,a=l}finally{try{o||null==n.return||n.return()}finally{if(i)throw a}}return s}}(e,t)||function(e,t){if(e){if("string"===typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(t,{Z:function(){return a}})}},function(e){e.O(0,[774,737,101,147,37,730,888,179],(function(){return t=3339,e(e.s=t);var t}));var t=e.O();_N_E=t}]);